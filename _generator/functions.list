?#sf_coulomb_CL_array#int gsl_sf_coulomb_CL_array(double Lmin, int kmax, double eta, double * cl);

#sf_bessel_Yn_array#int gsl_sf_bessel_Yn_array(const int nmin, const int nmax, const double x, double * result_array);
#sf_bessel_In_array#int gsl_sf_bessel_In_array(const int nmin, const int nmax, const double x, double * result_array);
#sf_bessel_In_scaled_array#int gsl_sf_bessel_In_scaled_array(const int nmin, const int nmax, const double x, double * result_array);
#sf_bessel_Kn_array#int gsl_sf_bessel_Kn_array(const int nmin, const int nmax, const double x, double * result_array);
#sf_bessel_Kn_scaled_array#int gsl_sf_bessel_Kn_scaled_array(const int nmin, const int nmax, const double x, double * result_array);
#sf_bessel_jl_array#int gsl_sf_bessel_jl_array(const int lmax, const double x, double * result_array);
#sf_bessel_jl_steed_array#int gsl_sf_bessel_jl_steed_array(const int lmax, const double x, double * jl_x_array);
#sf_bessel_yl_array#int gsl_sf_bessel_yl_array(const int lmax, const double x, double * result_array);
#sf_bessel_il_scaled_array#int gsl_sf_bessel_il_scaled_array(const int lmax, const double x, double * result_array);
#sf_bessel_kl_scaled_array#int gsl_sf_bessel_kl_scaled_array(const int lmax, const double x, double * result_array);
#sf_gegenpoly_array#int gsl_sf_gegenpoly_array(int nmax, double lambda, double x, double * result_array);
#sf_legendre_H3d_array#int gsl_sf_legendre_H3d_array(const int lmax, const double lambda, const double eta, double * result_array);
#sf_bessel_Jn_array#int gsl_sf_bessel_Jn_array(int nmin, int nmax, double x, double * result_array);

#sf_Chi#int gsl_sf_Chi_e(const double x, gsl_sf_result * result);
#sf_Ci#int gsl_sf_Ci_e(const double x, gsl_sf_result * result);
#sf_Shi#int gsl_sf_Shi_e(const double x, gsl_sf_result * result);
#sf_Si#int gsl_sf_Si_e(const double x, gsl_sf_result * result);
#sf_airy_Ai#int gsl_sf_airy_Ai_e(const double x, const gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Ai_deriv#int gsl_sf_airy_Ai_deriv_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Ai_deriv_scaled#int gsl_sf_airy_Ai_deriv_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Ai_scaled#int gsl_sf_airy_Ai_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Bi#int gsl_sf_airy_Bi_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Bi_deriv#int gsl_sf_airy_Bi_deriv_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Bi_deriv_scaled#int gsl_sf_airy_Bi_deriv_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_Bi_scaled#int gsl_sf_airy_Bi_scaled_e(const double x, gsl_mode_t mode, gsl_sf_result * result);
#sf_airy_zero_Ai#int gsl_sf_airy_zero_Ai_e(unsigned int s, gsl_sf_result * result);
#sf_airy_zero_Ai_deriv#int gsl_sf_airy_zero_Ai_deriv_e(unsigned int s, gsl_sf_result * result);
#sf_airy_zero_Bi#int gsl_sf_airy_zero_Bi_e(unsigned int s, gsl_sf_result * result);
#sf_airy_zero_Bi_deriv#int gsl_sf_airy_zero_Bi_deriv_e(unsigned int s, gsl_sf_result * result);
#sf_angle_restrict_pos_err#int gsl_sf_angle_restrict_pos_err_e(const double theta, gsl_sf_result * result);
#sf_angle_restrict_symm_err#int gsl_sf_angle_restrict_symm_err_e(const double theta, gsl_sf_result * result);
#sf_atanint#int gsl_sf_atanint_e(const double x, gsl_sf_result * result);
#sf_bessel_I0#int gsl_sf_bessel_I0_e(const double x, gsl_sf_result * result);
#sf_bessel_I0_scaled#int gsl_sf_bessel_I0_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_I1#int gsl_sf_bessel_I1_e(const double x, gsl_sf_result * result);
#sf_bessel_I1_scaled#int gsl_sf_bessel_I1_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_In#int gsl_sf_bessel_In_e(const int n, const double x, gsl_sf_result * result);
#sf_bessel_In_scaled#int gsl_sf_bessel_In_scaled_e(int n, const double x, gsl_sf_result * result);
#sf_bessel_Inu#int gsl_sf_bessel_Inu_e(double nu, double x, gsl_sf_result * result);
#sf_bessel_Inu_scaled#int gsl_sf_bessel_Inu_scaled_e(double nu, double x, gsl_sf_result * result);
#sf_bessel_J0#int gsl_sf_bessel_J0_e(const double x, gsl_sf_result * result);
#sf_bessel_J1#int gsl_sf_bessel_J1_e(const double x, gsl_sf_result * result);
#sf_bessel_Jn#int gsl_sf_bessel_Jn_e(int n, double x, gsl_sf_result * result);
#sf_bessel_Jnu#int gsl_sf_bessel_Jnu_e(const double nu, const double x, gsl_sf_result * result);
#sf_bessel_K0#int gsl_sf_bessel_K0_e(const double x, gsl_sf_result * result);
#sf_bessel_K0_scaled#int gsl_sf_bessel_K0_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_K1#int gsl_sf_bessel_K1_e(const double x, gsl_sf_result * result);
#sf_bessel_K1_scaled#int gsl_sf_bessel_K1_scaled_e(const double x, gsl_sf_result * result); 
#sf_bessel_Kn#int gsl_sf_bessel_Kn_e(const int n, const double x, gsl_sf_result * result);
#sf_bessel_Kn_scaled#int gsl_sf_bessel_Kn_scaled_e(int n, const double x, gsl_sf_result * result);
#sf_bessel_Knu#int gsl_sf_bessel_Knu_e(const double nu, const double x, gsl_sf_result * result);
#sf_bessel_Knu_scaled#int gsl_sf_bessel_Knu_scaled_e(const double nu, const double x, gsl_sf_result * result);
#sf_bessel_Y0#int gsl_sf_bessel_Y0_e(const double x, gsl_sf_result * result);
#sf_bessel_Y1#int gsl_sf_bessel_Y1_e(const double x, gsl_sf_result * result);
#sf_bessel_Yn#int gsl_sf_bessel_Yn_e(int n,const double x, gsl_sf_result * result);
#sf_bessel_Ynu#int gsl_sf_bessel_Ynu_e(double nu, double x, gsl_sf_result * result);
#sf_bessel_i0_scaled#int gsl_sf_bessel_i0_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_i1_scaled#int gsl_sf_bessel_i1_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_i2_scaled#int gsl_sf_bessel_i2_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_il_scaled#int gsl_sf_bessel_il_scaled_e(const int l, double x, gsl_sf_result * result);
#sf_bessel_j0#int gsl_sf_bessel_j0_e(const double x, gsl_sf_result * result);
#sf_bessel_j1#int gsl_sf_bessel_j1_e(const double x, gsl_sf_result * result);
#sf_bessel_j2#int gsl_sf_bessel_j2_e(const double x, gsl_sf_result * result);
#sf_bessel_jl#int gsl_sf_bessel_jl_e(const int l, const double x, gsl_sf_result * result);
#sf_bessel_k0_scaled#int gsl_sf_bessel_k0_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_k1_scaled#int gsl_sf_bessel_k1_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_k2_scaled#int gsl_sf_bessel_k2_scaled_e(const double x, gsl_sf_result * result);
#sf_bessel_kl_scaled#int gsl_sf_bessel_kl_scaled_e(int l, const double x, gsl_sf_result * result);
#sf_bessel_lnKnu#int gsl_sf_bessel_lnKnu_e(const double nu, const double x, gsl_sf_result * result);
#sf_bessel_y0#int gsl_sf_bessel_y0_e(const double x, gsl_sf_result * result);
#sf_bessel_y1#int gsl_sf_bessel_y1_e(const double x, gsl_sf_result * result);
#sf_bessel_y2#int gsl_sf_bessel_y2_e(const double x, gsl_sf_result * result);
#sf_bessel_yl#int gsl_sf_bessel_yl_e(int l, const double x, gsl_sf_result * result);
#sf_bessel_zero_J0#int gsl_sf_bessel_zero_J0_e(unsigned int s, gsl_sf_result * result);
#sf_bessel_zero_J1#int gsl_sf_bessel_zero_J1_e(unsigned int s, gsl_sf_result * result);
#sf_bessel_zero_Jnu#int gsl_sf_bessel_zero_Jnu_e(double nu, unsigned int s, gsl_sf_result * result);
#sf_beta#int gsl_sf_beta_e(const double a, const double b, gsl_sf_result * result);
#sf_beta_inc#int gsl_sf_beta_inc_e(const double a, const double b, const double x, gsl_sf_result * result);
#sf_choose#int gsl_sf_choose_e(unsigned int n, unsigned int m, gsl_sf_result * result);
#sf_clausen#int gsl_sf_clausen_e(double x, gsl_sf_result * result);
#sf_conicalP_0#int gsl_sf_conicalP_0_e(const double lambda, const double x, gsl_sf_result * result);
#sf_conicalP_1#int gsl_sf_conicalP_1_e(const double lambda, const double x, gsl_sf_result * result);
#sf_conicalP_cyl_reg#int gsl_sf_conicalP_cyl_reg_e(const int m, const double lambda, const double x, gsl_sf_result * result);
#sf_conicalP_half#int gsl_sf_conicalP_half_e(const double lambda, const double x, gsl_sf_result * result);
#sf_conicalP_mhalf#int gsl_sf_conicalP_mhalf_e(const double lambda, const double x, gsl_sf_result * result);
#sf_conicalP_sph_reg#int gsl_sf_conicalP_sph_reg_e(const int l, const double lambda, const double x, gsl_sf_result * result);
#sf_cos#int gsl_sf_cos_e(double x, gsl_sf_result * result);
#sf_cos_err#int gsl_sf_cos_err_e(const double x, const double dx, gsl_sf_result * result);
#sf_coulomb_CL#int gsl_sf_coulomb_CL_e(double L, double eta, gsl_sf_result * result);
#sf_coupling_3j#int gsl_sf_coupling_3j_e(int two_ja, int two_jb, int two_jc, int two_ma, int two_mb, int two_mc, gsl_sf_result * result);
#sf_coupling_6j#int gsl_sf_coupling_6j_e(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, gsl_sf_result * result);
#sf_coupling_9j#int gsl_sf_coupling_9j_e(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, int two_jg, int two_jh, int two_ji, gsl_sf_result * result);
#sf_coupling_RacahW#int gsl_sf_coupling_RacahW_e(int two_ja, int two_jb, int two_jc, int two_jd, int two_je, int two_jf, gsl_sf_result * result);
#sf_dawson#int gsl_sf_dawson_e(double x, gsl_sf_result * result);
#sf_debye_1#int gsl_sf_debye_1_e(const double x, gsl_sf_result * result);
#sf_debye_2#int gsl_sf_debye_2_e(const double x, gsl_sf_result * result);
#sf_debye_3#int gsl_sf_debye_3_e(const double x, gsl_sf_result * result);
#sf_debye_4#int gsl_sf_debye_4_e(const double x, gsl_sf_result * result);
#sf_debye_5#int gsl_sf_debye_5_e(const double x, gsl_sf_result * result);
#sf_debye_6#int gsl_sf_debye_6_e(const double x, gsl_sf_result * result);
#sf_dilog#int gsl_sf_dilog_e(const double x, gsl_sf_result * result);
#sf_doublefact#int gsl_sf_doublefact_e(const unsigned int n, gsl_sf_result * result);
#sf_ellint_D#int gsl_sf_ellint_D_e(double phi, double k, double n, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_Dcomp#int gsl_sf_ellint_Dcomp_e(double k, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_E#int gsl_sf_ellint_E_e(double phi, double k, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_Ecomp#int gsl_sf_ellint_Ecomp_e(double k, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_F#int gsl_sf_ellint_F_e(double phi, double k, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_Kcomp#int gsl_sf_ellint_Kcomp_e(double k, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_P#int gsl_sf_ellint_P_e(double phi, double k, double n, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_Pcomp#int gsl_sf_ellint_Pcomp_e(double k, double n, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_RC#int gsl_sf_ellint_RC_e(double x, double y, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_RD#int gsl_sf_ellint_RD_e(double x, double y, double z, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_RF#int gsl_sf_ellint_RF_e(double x, double y, double z, gsl_mode_t mode, gsl_sf_result * result);
#sf_ellint_RJ#int gsl_sf_ellint_RJ_e(double x, double y, double z, double p, gsl_mode_t mode, gsl_sf_result * result);
#sf_erf#int gsl_sf_erf_e(double x, gsl_sf_result * result);
#sf_erf_Q#int gsl_sf_erf_Q_e(double x, gsl_sf_result * result);
#sf_erf_Z#int gsl_sf_erf_Z_e(double x, gsl_sf_result * result);
#sf_erfc#int gsl_sf_erfc_e(double x, gsl_sf_result * result);
#sf_eta#int gsl_sf_eta_e(const double s, gsl_sf_result * result);
#sf_eta_int#int gsl_sf_eta_int_e(int n, gsl_sf_result * result);
#sf_exp#int gsl_sf_exp_e(const double x, gsl_sf_result * result);
#sf_exp_e10#int gsl_sf_exp_e10_e(const double x, gsl_sf_result_e10 * result);
#sf_exp_err#int gsl_sf_exp_err_e(const double x, const double dx, gsl_sf_result * result);
#sf_exp_err_e10#int gsl_sf_exp_err_e10_e(const double x, const double dx, gsl_sf_result_e10 * result);
#sf_exp_mult#int gsl_sf_exp_mult_e(const double x, const double y, gsl_sf_result * result);
#sf_exp_mult_e10#int gsl_sf_exp_mult_e10_e(const double x, const double y, gsl_sf_result_e10 * result);
#sf_exp_mult_err#int gsl_sf_exp_mult_err_e(const double x, const double dx, const double y, const double dy, gsl_sf_result * result);
#sf_exp_mult_err_e10#int gsl_sf_exp_mult_err_e10_e(const double x, const double dx, const double y, const double dy, gsl_sf_result_e10 * result);
#sf_expint_3#int gsl_sf_expint_3_e(const double x, gsl_sf_result * result);
#sf_expint_E1#int gsl_sf_expint_E1_e(const double x, gsl_sf_result * result);
#sf_expint_E1_scaled#int gsl_sf_expint_E1_scaled_e(const double x, gsl_sf_result * result);
#sf_expint_E2#int gsl_sf_expint_E2_e(const double x, gsl_sf_result * result);
#sf_expint_E2_scaled#int gsl_sf_expint_E2_scaled_e(const double x, gsl_sf_result * result);
#sf_expint_Ei#int gsl_sf_expint_Ei_e(const double x, gsl_sf_result * result);
#sf_expint_Ei_scaled#int gsl_sf_expint_Ei_scaled_e(const double x, gsl_sf_result * result);
#sf_expint_En#int gsl_sf_expint_En_e(const int n, const double x, gsl_sf_result * result);
#sf_expint_En_scaled#int gsl_sf_expint_En_scaled_e(const int n, const double x, gsl_sf_result * result);
#sf_expm1#int gsl_sf_expm1_e(const double x, gsl_sf_result * result);
#sf_exprel#int gsl_sf_exprel_e(const double x, gsl_sf_result * result);
#sf_exprel_2#int gsl_sf_exprel_2_e(double x, gsl_sf_result * result);
#sf_exprel_n#int gsl_sf_exprel_n_e(const int n, const double x, gsl_sf_result * result);
#sf_exprel_n_CF#int gsl_sf_exprel_n_CF_e(const double n, const double x, gsl_sf_result * result);
#sf_fact#int gsl_sf_fact_e(const unsigned int n, gsl_sf_result * result);
#sf_fermi_dirac_0#int gsl_sf_fermi_dirac_0_e(const double x, gsl_sf_result * result);
#sf_fermi_dirac_1#int gsl_sf_fermi_dirac_1_e(const double x, gsl_sf_result * result);
#sf_fermi_dirac_2#int gsl_sf_fermi_dirac_2_e(const double x, gsl_sf_result * result);
#sf_fermi_dirac_3half#int gsl_sf_fermi_dirac_3half_e(const double x, gsl_sf_result * result);
#sf_fermi_dirac_half#int gsl_sf_fermi_dirac_half_e(const double x, gsl_sf_result * result);
#sf_fermi_dirac_inc_0#int gsl_sf_fermi_dirac_inc_0_e(const double x, const double b, gsl_sf_result * result);
#sf_fermi_dirac_int#int gsl_sf_fermi_dirac_int_e(const int j, const double x, gsl_sf_result * result);
#sf_fermi_dirac_m1#int gsl_sf_fermi_dirac_m1_e(const double x, gsl_sf_result * result);
#sf_fermi_dirac_mhalf#int gsl_sf_fermi_dirac_mhalf_e(const double x, gsl_sf_result * result);
#sf_gamma#int gsl_sf_gamma_e(const double x, gsl_sf_result * result);
#sf_gamma_inc#int gsl_sf_gamma_inc_e(const double a, const double x, gsl_sf_result * result);
#sf_gamma_inc_P#int gsl_sf_gamma_inc_P_e(const double a, const double x, gsl_sf_result * result);
#sf_gamma_inc_Q#int gsl_sf_gamma_inc_Q_e(const double a, const double x, gsl_sf_result * result);
#sf_gammainv#int gsl_sf_gammainv_e(const double x, gsl_sf_result * result);
#sf_gammastar#int gsl_sf_gammastar_e(const double x, gsl_sf_result * result);
#sf_gegenpoly_1#int gsl_sf_gegenpoly_1_e(double lambda, double x, gsl_sf_result * result);
#sf_gegenpoly_2#int gsl_sf_gegenpoly_2_e(double lambda, double x, gsl_sf_result * result);
#sf_gegenpoly_3#int gsl_sf_gegenpoly_3_e(double lambda, double x, gsl_sf_result * result);
#sf_gegenpoly_n#int gsl_sf_gegenpoly_n_e(int n, double lambda, double x, gsl_sf_result * result);
#sf_hazard#int gsl_sf_hazard_e(double x, gsl_sf_result * result);
#sf_hydrogenicR#int gsl_sf_hydrogenicR_e(const int n, const int l, const double Z, const double r, gsl_sf_result * result);
#sf_hydrogenicR_1#int gsl_sf_hydrogenicR_1_e(const double Z, const double r, gsl_sf_result * result);
#sf_hyperg_0F1#int gsl_sf_hyperg_0F1_e(double c, double x, gsl_sf_result * result);
#sf_hyperg_1F1#int gsl_sf_hyperg_1F1_e(const double a, const double b, const double x, gsl_sf_result * result);
#sf_hyperg_1F1_int#int gsl_sf_hyperg_1F1_int_e(const int m, const int n, const double x, gsl_sf_result * result);
#sf_hyperg_2F0#int gsl_sf_hyperg_2F0_e(const double a, const double b, const double x, gsl_sf_result * result);
#sf_hyperg_2F1#int gsl_sf_hyperg_2F1_e(double a, double b, const double c, const double x, gsl_sf_result * result);
#sf_hyperg_2F1_conj#int gsl_sf_hyperg_2F1_conj_e(const double aR, const double aI, const double c, const double x, gsl_sf_result * result);
#sf_hyperg_2F1_conj_renorm#int gsl_sf_hyperg_2F1_conj_renorm_e(const double aR, const double aI, const double c, const double x, gsl_sf_result * result);
#sf_hyperg_2F1_renorm#int gsl_sf_hyperg_2F1_renorm_e(const double a, const double b, const double c, const double x, gsl_sf_result * result);
#sf_hyperg_U#int gsl_sf_hyperg_U_e(const double a, const double b, const double x, gsl_sf_result * result);
#sf_hyperg_U_e10#int gsl_sf_hyperg_U_e10_e(const double a, const double b, const double x, gsl_sf_result_e10 * result);
#sf_hyperg_U_int#int gsl_sf_hyperg_U_int_e(const int m, const int n, const double x, gsl_sf_result * result);
#sf_hyperg_U_int_e10#int gsl_sf_hyperg_U_int_e10_e(const int m, const int n, const double x, gsl_sf_result_e10 * result);
#sf_hypot#int gsl_sf_hypot_e(const double x, const double y, gsl_sf_result * result);
#sf_hzeta#int gsl_sf_hzeta_e(const double s, const double q, gsl_sf_result * result);
#sf_laguerre_1#int gsl_sf_laguerre_1_e(const double a, const double x, gsl_sf_result * result);
#sf_laguerre_2#int gsl_sf_laguerre_2_e(const double a, const double x, gsl_sf_result * result);
#sf_laguerre_3#int gsl_sf_laguerre_3_e(const double a, const double x, gsl_sf_result * result);
#sf_laguerre_n#int gsl_sf_laguerre_n_e(const int n, const double a, const double x, gsl_sf_result * result);
#sf_lambert_W0#int gsl_sf_lambert_W0_e(double x, gsl_sf_result * result);
#sf_lambert_Wm1#int gsl_sf_lambert_Wm1_e(double x, gsl_sf_result * result);
#sf_legendre_H3d#int gsl_sf_legendre_H3d_e(const int l, const double lambda, const double eta, gsl_sf_result * result);
#sf_legendre_H3d_0#int gsl_sf_legendre_H3d_0_e(const double lambda, const double eta, gsl_sf_result * result);
#sf_legendre_H3d_1#int gsl_sf_legendre_H3d_1_e(const double lambda, const double eta, gsl_sf_result * result);
#sf_legendre_P1#int gsl_sf_legendre_P1_e(double x, gsl_sf_result * result);
#sf_legendre_P2#int gsl_sf_legendre_P2_e(double x, gsl_sf_result * result);
#sf_legendre_P3#int gsl_sf_legendre_P3_e(double x, gsl_sf_result * result);
#sf_legendre_Pl#int gsl_sf_legendre_Pl_e(const int l, const double x, gsl_sf_result * result);
#sf_legendre_Plm#int gsl_sf_legendre_Plm_e(const int l, const int m, const double x, gsl_sf_result * result);
#sf_legendre_Q0#int gsl_sf_legendre_Q0_e(const double x, gsl_sf_result * result);
#sf_legendre_Q1#int gsl_sf_legendre_Q1_e(const double x, gsl_sf_result * result);
#sf_legendre_Ql#int gsl_sf_legendre_Ql_e(const int l, const double x, gsl_sf_result * result);
#sf_legendre_sphPlm#int gsl_sf_legendre_sphPlm_e(const int l, int m, const double x, gsl_sf_result * result);
#sf_lnbeta#int gsl_sf_lnbeta_e(const double a, const double b, gsl_sf_result * result);
#sf_lnchoose#int gsl_sf_lnchoose_e(unsigned int n, unsigned int m, gsl_sf_result * result);
#sf_lncosh#int gsl_sf_lncosh_e(const double x, gsl_sf_result * result);
#sf_lndoublefact#int gsl_sf_lndoublefact_e(const unsigned int n, gsl_sf_result * result);
#sf_lnfact#int gsl_sf_lnfact_e(const unsigned int n, gsl_sf_result * result);
#sf_lngamma#int gsl_sf_lngamma_e(double x, gsl_sf_result * result);
#sf_lnpoch#int gsl_sf_lnpoch_e(const double a, const double x, gsl_sf_result * result);
#sf_lnsinh#int gsl_sf_lnsinh_e(const double x, gsl_sf_result * result);
#sf_log#int gsl_sf_log_e(const double x, gsl_sf_result * result);
#sf_log_1plusx#int gsl_sf_log_1plusx_e(const double x, gsl_sf_result * result);
#sf_log_1plusx_mx#int gsl_sf_log_1plusx_mx_e(const double x, gsl_sf_result * result);
#sf_log_abs#int gsl_sf_log_abs_e(const double x, gsl_sf_result * result);
#sf_log_erfc#int gsl_sf_log_erfc_e(double x, gsl_sf_result * result);
#sf_multiply#int gsl_sf_multiply_e(const double x, const double y, gsl_sf_result * result);
#sf_multiply_err#int gsl_sf_multiply_err_e(const double x, const double dx, const double y, const double dy, gsl_sf_result * result);
#sf_poch#int gsl_sf_poch_e(const double a, const double x, gsl_sf_result * result);
#sf_pochrel#int gsl_sf_pochrel_e(const double a, const double x, gsl_sf_result * result);
#sf_pow_int#int gsl_sf_pow_int_e(double x, int n, gsl_sf_result * result);
#sf_psi#int gsl_sf_psi_e(const double x, gsl_sf_result * result);
#sf_psi_1#int gsl_sf_psi_1_e(const double x, gsl_sf_result * result);
#sf_psi_1_int#int gsl_sf_psi_1_int_e(const int n, gsl_sf_result * result);
#sf_psi_1piy#int gsl_sf_psi_1piy_e(const double y, gsl_sf_result * result);
#sf_psi_int#int gsl_sf_psi_int_e(const int n, gsl_sf_result * result);
#sf_psi_n#int gsl_sf_psi_n_e(const int n, const double x, gsl_sf_result * result);
#sf_sin#int gsl_sf_sin_e(double x, gsl_sf_result * result);
#sf_sin_err#int gsl_sf_sin_err_e(const double x, const double dx, gsl_sf_result * result);
#sf_sinc#int gsl_sf_sinc_e(double x, gsl_sf_result * result);
#sf_synchrotron_1#int gsl_sf_synchrotron_1_e(const double x, gsl_sf_result * result);
#sf_synchrotron_2#int gsl_sf_synchrotron_2_e(const double x, gsl_sf_result * result);
#sf_taylorcoeff#int gsl_sf_taylorcoeff_e(const int n, const double x, gsl_sf_result * result);
#sf_transport_2#int gsl_sf_transport_2_e(const double x, gsl_sf_result * result);
#sf_transport_3#int gsl_sf_transport_3_e(const double x, gsl_sf_result * result);
#sf_transport_4#int gsl_sf_transport_4_e(const double x, gsl_sf_result * result);
#sf_transport_5#int gsl_sf_transport_5_e(const double x, gsl_sf_result * result);
#sf_zeta#int gsl_sf_zeta_e(const double s, gsl_sf_result * result);
#sf_zeta_int#int gsl_sf_zeta_int_e(const int n, gsl_sf_result * result);
#sf_zetam1#int gsl_sf_zetam1_e(const double s, gsl_sf_result * result);
#sf_zetam1_int#int gsl_sf_zetam1_int_e(const int s, gsl_sf_result * result);

?#sf_angle_restrict_pos#int gsl_sf_angle_restrict_pos_e(double * theta);
?#sf_angle_restrict_symm#int gsl_sf_angle_restrict_symm_e(double * theta);
?#sf_bessel_sequence_Jnu#int gsl_sf_bessel_sequence_Jnu_e(double nu, gsl_mode_t mode, size_t size, double * v);
?#sf_coulomb_wave_FG#gsl_sf_coulomb_wave_FG_e(const double eta, const double x, gsl_sf_result * F, gsl_sf_result * Fp, gsl_sf_result * G, gsl_sf_result * Gp, XXXX
?#sf_elljac#int gsl_sf_elljac_e(double u, double m, double * sn, double * cn, double * dn);
?#sf_lnbeta_sgn#int gsl_sf_lnbeta_sgn_e(const double x, const double y, gsl_sf_result * result, double * sgn);
?#sf_lngamma_complex#int gsl_sf_lngamma_complex_e(double zr, double zi, gsl_sf_result * lnr, gsl_sf_result * arg);
?#sf_lngamma_sgn#int gsl_sf_lngamma_sgn_e(double x, gsl_sf_result * result_lg, double *sgn);
?#sf_lnpoch_sgn#int gsl_sf_lnpoch_sgn_e(const double a, const double x, gsl_sf_result * result, double * sgn);
?#sf_result_smash#int gsl_sf_result_smash_e(const gsl_sf_result_e10 * re, gsl_sf_result * r);

?#sf_complex_cos#int gsl_sf_complex_cos_e(const double zr, const double zi, gsl_sf_result * czr, gsl_sf_result * czi);
?#sf_complex_dilog#XXX gsl_sf_complex_dilog_e(gsl_sf_result * result_re, gsl_sf_result * result_im XXXX
?#sf_complex_dilog_xy#XXX gsl_sf_complex_dilog_xy_e(gsl_sf_result * result_re, gsl_sf_result * result_im XXXX
?#sf_complex_log#int gsl_sf_complex_log_e(const double zr, const double zi, gsl_sf_result * lnr, gsl_sf_result * theta);
?#sf_complex_logsin#int gsl_sf_complex_logsin_e(const double zr, const double zi, gsl_sf_result * lszr, gsl_sf_result * lszi);
?#sf_complex_psi#int gsl_sf_complex_psi_e(gsl_sf_result * result_re, gsl_sf_result * result_im XXXX
?#sf_complex_sin#int gsl_sf_complex_sin_e(const double zr, const double zi, gsl_sf_result * szr, gsl_sf_result * szi);
?#sf_complex_spence_xy#XXX gsl_sf_complex_spence_xy_e(gsl_sf_result * real_sp, gsl_sf_result * imag_sp XXXX
